import cv2
import mediapipe as mp
import time


class FaceDetector():
    def __init__(self, minDetectionCon=0.5):
        self.minDetectionCon = minDetectionCon
        self.mpFaceDetection = mp.solutions.face_detection
        self.mpDraw = mp.solutions.drawing_utils
        self.faceDetection = self.mpFaceDetection.FaceDetection(self.minDetectionCon)

    def finFaces(self, img, draw=True):
        imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        self.results = self.faceDetection.process(imgRGB)
        print(self.results)

        bboxs = []
        if self.results.detections:
            for id, detection in enumerate(self.results.detections):
                bboxC = detection.location_data.relative_bounding_box
                ih, iw, ic = img.shape
                bbox = int(bboxC.xmin * iw), int(bboxC.ymin * ih), \
                       int(bboxC.width * iw), int(bboxC.height * ih)
                bboxs.append([id, bbox, detection.score])

                if draw:
                   self.fancyDraw((img, bbox))
                   cv2.putText(img, f'{int(detection.score[0] * 100)}%',
                              (bbox[0], bbox[1] - 20), cv2.FONT_HERSHEY_PLAIN,
                              2, (255, 0, 255), 2)
        return img, bboxs

    def fancyDraw(self, img, bbox,len =30,tick=10,rt=1):
        x, y, w, h = bbox
        x1, y1 = x + w, y + h

        cv2.rectangle(img, bbox, (255, 0, 255), rt)
        #top left x,y
        cv2.line(img,(x,y),(x+len,y),(255,0,255),tick)
        cv2.line(img, (x, y), (x, y+len), (255, 0, 255), tick)
        # top right x1,y
        cv2.line(img, (x1, y), (x1 - len, y), (255, 0, 255), tick)
        cv2.line(img, (x1, y), (x1, y + len), (255, 0, 255), tick)
        #bottom left x,y1
        cv2.line(img, (x, y), (x + len, y1), (255, 0, 255), tick)
        cv2.line(img, (x, y), (x, y1 - len), (255, 0, 255), tick)
        #bottom right x1,y1
        cv2.line(img, (x1, y1), (x1 - len, y1), (255, 0, 255), tick)
        cv2.line(img, (x1, y1), (x1, y1 - len), (255, 0, 255), tick)

        return img
